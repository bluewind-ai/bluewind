# Generated by Django 5.1.1 on 2024-09-30 18:51

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FunctionCall",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tn_ancestors_pks",
                    models.TextField(
                        blank=True,
                        default="",
                        editable=False,
                        verbose_name="Ancestors pks",
                    ),
                ),
                (
                    "tn_ancestors_count",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="Ancestors count"
                    ),
                ),
                (
                    "tn_children_pks",
                    models.TextField(
                        blank=True,
                        default="",
                        editable=False,
                        verbose_name="Children pks",
                    ),
                ),
                (
                    "tn_children_count",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="Children count"
                    ),
                ),
                (
                    "tn_depth",
                    models.PositiveIntegerField(
                        default=0,
                        editable=False,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Depth",
                    ),
                ),
                (
                    "tn_descendants_pks",
                    models.TextField(
                        blank=True,
                        default="",
                        editable=False,
                        verbose_name="Descendants pks",
                    ),
                ),
                (
                    "tn_descendants_count",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="Descendants count"
                    ),
                ),
                (
                    "tn_index",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="Index"
                    ),
                ),
                (
                    "tn_level",
                    models.PositiveIntegerField(
                        default=1,
                        editable=False,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Level",
                    ),
                ),
                (
                    "tn_priority",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(9999999999),
                        ],
                        verbose_name="Priority",
                    ),
                ),
                (
                    "tn_order",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="Order"
                    ),
                ),
                (
                    "tn_siblings_pks",
                    models.TextField(
                        blank=True,
                        default="",
                        editable=False,
                        verbose_name="Siblings pks",
                    ),
                ),
                (
                    "tn_siblings_count",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="Siblings count"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("conditions-not-met", "Conditions Not Met"),
                            ("ready-for-approval", "Ready for Approval"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            (
                                "completed-ready-for-approval",
                                "Completed Ready for Approval",
                            ),
                            ("marked-successful", "Marked Successful"),
                            ("marked-failed", "Marked Failed"),
                            ("successful", "Successful"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="conditions-not-met",
                        max_length=35,
                    ),
                ),
                ("state", models.JSONField(default=dict)),
                ("input_parameter_name", models.CharField(max_length=255)),
                ("input_data", models.JSONField(blank=True, default=dict)),
                ("output_data", models.JSONField(blank=True, default=dict)),
                (
                    "output_type",
                    models.CharField(choices=[("queryset", "queryset")], max_length=35),
                ),
                ("executed_at", models.DateTimeField(blank=True, null=True)),
                ("remaining_dependencies", models.IntegerField(default=0)),
                ("thoughts", models.TextField(blank=True, null=True)),
                ("whole_tree", models.JSONField(blank=True, default=dict, null=True)),
                ("is_root", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Function Call",
                "verbose_name_plural": "Function Calls",
                "ordering": ["tn_order"],
                "abstract": False,
            },
        ),
    ]
