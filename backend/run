#!/bin/bash

set -e

# Early termination for Windows environments
if [[ "$OSTYPE" == "cygwin" ]] || [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "win32" ]]; then
    echo "This script cannot be run on Windows."
    echo "Please follow the installation instructions at https://docs.python.org/3/using/windows.html"
    echo "To install poetry on Windows, please follow the instructions at https://python-poetry.org/docs/master/#installation"
    exit 1
fi

if ! command -v apt-get &> /dev/null; then
    echo "apt-get could not be found. Attempting to install..."
    if command -v apt &> /dev/null; then
        apt update && apt install -y apt-utils
    elif command -v dpkg &> /dev/null; then
        # If we have dpkg, we're likely on a Debian-based system
        # and can use it to install apt-get
        dpkg --configure -a
        apt-get update && apt-get install -y apt-utils
    else
        echo "Unable to install apt-get. Please install it manually or use a Debian-based system."
        exit 1
    fi
fi

install_docker() {
    if command -v docker &> /dev/null; then
        echo "Docker is already installed."
        return
    fi

    echo "Docker is not installed. Attempting to install Docker..."

    if ! command -v apt-get &> /dev/null; then
        echo "apt-get is not available. Please install Docker manually."
        exit 1
    fi

    apt-get update
    apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    apt-get update
    apt-get install -y docker-ce docker-ce-cli containerd.io

    echo "Docker has been installed successfully."
}

# Install curl if not present
if ! command -v curl &> /dev/null
then
    echo "curl could not be found"
    echo "Installing curl..."
    apt-get update && apt-get install -y curl
fi

# Install git if not present
if ! command -v git &> /dev/null
then
    echo "git could not be found"
    echo "Installing git..."
    apt-get update && apt-get install -y git
fi

# Install build essentials and dependencies for Python compilation
if ! command -v gcc &> /dev/null
then
    echo "gcc could not be found"
    echo "Installing build essentials and Python dependencies..."
    apt-get update && apt-get install -y build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev wget llvm libncurses5-dev \
    xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
fi

# Install PostgreSQL development files for psycopg2
if ! dpkg -s libpq-dev &> /dev/null
then
    echo "libpq-dev could not be found"
    echo "Installing PostgreSQL development files..."
    apt-get update && apt-get install -y libpq-dev
fi

# Install Graphviz and its development files for pygraphviz
if ! dpkg -s graphviz &> /dev/null || ! dpkg -s libgraphviz-dev &> /dev/null
then
    echo "Graphviz or its development files could not be found"
    echo "Installing Graphviz and its development files..."
    apt-get update && apt-get install -y graphviz libgraphviz-dev
fi

# Set environment variables for pygraphviz
export GRAPHVIZ_DIR="/usr/include/graphviz"
export LD_LIBRARY_PATH="/usr/lib/graphviz"

# Install pyenv
if [ ! -d "$HOME/.pyenv" ]; then
    echo "pyenv not found. Installing pyenv..."
    curl https://pyenv.run | bash
fi

# Set up pyenv in the current shell
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# Function to check Python version
check_python_version() {
    pyenv versions | grep -q 3.10
}

# Check Python version and install if necessary
if ! check_python_version; then
    echo "Python 3.10 is not installed. Installing using pyenv..."
    pyenv install 3.10.0
    pyenv global 3.10.0
fi

# Install build essentials and dependencies for Python compilation
if ! command -v gcc &> /dev/null
then
    echo "gcc could not be found"
    echo "Installing build essentials and Python dependencies..."
    apt-get update && apt-get install -y build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev wget llvm libncurses5-dev \
    xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
fi

echo "System information:"
uname -a
echo "Python version:"
python --version

# Install pip if not present
if ! command -v pip &> /dev/null
then
    echo "pip could not be found"
    echo "Installing pip..."
    python -m ensurepip --upgrade
fi

echo "Pip version:"
pip --version
echo "Python path:"
which python
echo "Pip path:"
which pip
echo "Current PATH:"
echo $PATH

if ! command -v poetry &> /dev/null
then
    echo "poetry could not be found"
    echo "Installing poetry..."
    curl -sSL https://install.python-poetry.org | python -
    if [ $? -ne 0 ]; then
        echo "Poetry installation failed. Please check the error messages above."
        exit 1
    fi
    export PATH="$HOME/.local/bin:$PATH"
fi

pip install click
poetry --version
python cli.py "$@"