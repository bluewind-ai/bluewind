export declare const anonRole: import("../pg-core/roles.ts").PgRole;
export declare const authenticatedRole: import("../pg-core/roles.ts").PgRole;
export declare const serviceRole: import("../pg-core/roles.ts").PgRole;
export declare const postgresRole: import("../pg-core/roles.ts").PgRole;
export declare const supabaseAuthAdminRole: import("../pg-core/roles.ts").PgRole;
export declare const authUsers: import("../pg-core/index.ts").PgTableWithColumns<{
    name: "users";
    schema: "auth";
    columns: {
        id: import("../pg-core/index.ts").PgColumn<{
            name: "id";
            tableName: "users";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const realtimeMessages: import("../pg-core/index.ts").PgTableWithColumns<{
    name: "messages";
    schema: "realtime";
    columns: {
        id: import("../pg-core/index.ts").PgColumn<{
            name: "id";
            tableName: "messages";
            dataType: "bigint";
            columnType: "PgBigSerial64";
            data: bigint;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            generated: undefined;
        }, {}, {}>;
        topic: import("../pg-core/index.ts").PgColumn<{
            name: "topic";
            tableName: "messages";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            generated: undefined;
        }, {}, {}>;
        extension: import("../pg-core/index.ts").PgColumn<{
            name: "extension";
            tableName: "messages";
            dataType: "string";
            columnType: "PgText";
            data: "presence" | "broadcast" | "postgres_changes";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["presence", "broadcast", "postgres_changes"];
            baseColumn: never;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const authUid: import("../sql/sql.ts").SQL<unknown>;
export declare const realtimeTopic: import("../sql/sql.ts").SQL<unknown>;
