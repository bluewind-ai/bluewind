make sure there is no nullable charfield
defensive programming on the filter by tenant: in the model manager and in every query
pgbadger
pgstats
get_absolute_url of resource
requirements folder
mozilla observatory
checkout django webtest

feature ascension: cli / django admin / api / beautiful web client
use django-ajax-datatable
should you name table.id or table.uuid, if you use uuids?
easy redirect after id change

Should you be able to delete your workspace? Probably, see clickup. The problem is that my admin page depends on a workspace. The workspace resource should be under /admin/settings or something. This way after deleting your workspace, you remain on the page.

I have very dangerous tests that should never run in production and others that are very important to run regularly in production

nice website, I should post bluewind in here too: https://app.fossa.com/projects/git%2Bgithub.com%2Ftemporalio%2Ftemporal-helm-charts/refs/branch/master/eac55bff23c021e146d9e608ab895b2ac1f11f9e/preview

add to naming conventions: adjectives should not be prefixes, they should be suffixes. session_extended over extended_session

visualize autodiscovery to give full control and transparency to the user

think more about folders: clickup and windmill have this concept. There is something useful here. For permissions, but also to give this file hierarchy...
Clickup decided to limit the number of folders as far as I understand: workspace / space / lists
I think it's a good balance. nested folders are hard.

remove id 91017349113822292053236764842401387445

URGENT: put project in root folder

I need to do something like this: https://www.reddit.com/r/aws/comments/mrpexd/finding_resources_outside_of_cloudformation_stacks/
Because I have dangling resources, things outside of my cloudformation stack

Run tests on previous commits to see if they still work, to see if changes are backwards compatible.

add vantage to AWS accounts
add in the CI a step that checks if things work ok.

Campaign Goal: build much needed django improvements.
Opportunities for challengers: get visibility from Django community

buttons at the top to save
no db logs in console but it still needs to be pushed to DB
don't allow /admin/ without workspaces and without making sure user is logged in
PR campaigns: this french immigrant is building an app that does everything, maybe find something different than french immigrant, more memorable.
add new rule: log a lot. but please use logger(django.temp)
evolution of number of queries for the same basic action.
get metric number of DB query grouped by request path sliced by interval of 5 minutes.
why flow run not in the search
when clicking out of command palette -> leave the palette
Learning: blacklist the word content_type. It should only be contenttype
Learning: Systematically logger what's sent to the save function
remove actionrun
learning: form inlines obviously can't be saved before their dependencies, which is why flow run argument couldn't be used. for inlines related things, use statuses.
build something that removes logs, maybe a key is to remove the import and then delete out of import lines
prevent LLMS from enforcing: models as strings "Flow"

change_form_template = (
"admin/change_form.html" -> "admin/flow_runs/flowrun/change_form.html" # Update this line
)
these types of errors are very common
very common error: writing template instead of templates
make sure LLMS can't logger big stuff. create an error if they do.
at end of feature, systematically replace logger = logging.getLogger("django.temp") with logger = logging.getLogger("django.not_used")
no message on save objects automatically added
