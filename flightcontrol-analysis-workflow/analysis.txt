Flightcontrol has a great onboarding and I can learn a lot from them:

First this is what I am being told:
Enterprise Security: creating this CloudFormation stack gives Flightcontrol secure cross-account AssumeRole access.

Easily Revoke: revoke access in our dashboard or by manually deleting the CloudFormation stack.

Free: connecting your account is free. You won't incur AWS charges until creating a project.

Regions: this stack must be created in us-east-1 but projects can be in any region.

3 checkboxes:
- I have Administrator access
- send instructions to someone
- create aws account

then I can click on this link:
https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?region=us-east-1&param_FlightcontrolId=clzn0w70h00031yjzaxdlx5ky&stackName=flightcontrol-access-clzn0w70h00031yjzaxdlx5ky&templateURL=https%3A%2F%2Ffc-public-cf-templates.s3.us-west-2.amazonaws.com%2Fflightcontrol-cloudformation-v2.json

let's analyze it:
region=us-east-1
#/stacks/quickcreate?region=us-east-1
param_FlightcontrolId=clzn0w70h00031yjzaxdlx5ky
&stackName=flightcontrol-access-clzn0w70h00031yjzaxdlx5ky
&templateURL=https%3A%2F%2Ffc-public-cf-templates.s3.us-west-2.amazonaws.com%2Fflightcontrol-cloudformation-v2.json

this is the cloudformation template used:
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Securely connect your AWS account to Flightcontrol by deploying this cloudformation template.\n",
  "Parameters": {
    "FlightcontrolId": {
      "Type": "String",
      "Description": "Do not edit! Used to provide secure access to your AWS account"
    }
  },
  "Outputs": {},
  "Resources": {
    "FlightcontrolRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "flightcontrol",
              {
                "Ref": "FlightcontrolId"
              }
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": 832786265645
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": {
                    "Ref": "FlightcontrolId"
                  }
                }
              }
            }
          ]
        },
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AdministratorAccess"]
      }
    },
    "FlightcontrolAuthenticator": {
      "Type": "Custom::FlightcontrolAuth",
      "Properties": {
        "ServiceToken": "arn:aws:lambda:us-east-1:600013814144:function:flightcontrol-auth",
        "AwsAccount": {"Ref": "AWS::AccountId"},
        "StackRegion": {"Ref": "AWS::Region"},
        "FlightcontrolRole": {"Fn::GetAtt": ["FlightcontrolRole", "Arn"]},
        "FlightcontrolId": {"Ref": "FlightcontrolId"}
      }
    }
  }
}